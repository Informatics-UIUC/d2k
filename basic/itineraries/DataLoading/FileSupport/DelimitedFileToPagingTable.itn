<?xml version="1.0" encoding="UTF-8"?>

<toolkit xmlns:xsi="http://www.w3.org/2001/XMLSchema-Instance" xsi:noNamespaceSchemaLocation="itinerary.xsd">
  <itinerary resman="rO0ABXNyAB1uY3NhLmQyay5jb3JlLlJlc291cmNlTWFuYWdlcgAAAAAAAAABAgAAeHIAE2phdmEu
dXRpbC5IYXNodGFibGUTuw8lIUrkuAMAAkYACmxvYWRGYWN0b3JJAAl0aHJlc2hvbGR4cD9AAAAA
AAAIdwgAAAAFAAAAA3QAGlBhcnNlIEZpbGUgdG8gUGFnaW5nIFRhYmxlc3IAG25jc2EuZDJrLmNv
cmUuUmVzb3VyY2VFbnRyeQAAAAAAAAABAgACTAAMY2FjaGVkT2JqZWN0dAASTGphdmEvbGFuZy9P
YmplY3Q7TAAPb2JqZWN0Q2xhc3NOYW1ldAASTGphdmEvbGFuZy9TdHJpbmc7eHBwdAA6bmNzYS5k
MmsubW9kdWxlcy5jb3JlLmlvLmZpbGUuaW5wdXQuUGFyc2VGaWxlVG9QYWdpbmdUYWJsZXQAHENy
ZWF0ZSBEZWxpbWl0ZWQgRmlsZSBQYXJzZXJzcQB+AARwdABAbmNzYS5kMmsubW9kdWxlcy5jb3Jl
LmlvLmZpbGUuaW5wdXQuQ3JlYXRlRGVsaW1pdGVkUGFyc2VyRnJvbVVSTHQAEUlucHV0IFVSTCBv
ciBQYXRoc3EAfgAEcHQAMW5jc2EuZDJrLm1vZHVsZXMuY29yZS5pby5maWxlLmlucHV0LklucHV0
MUZpbGVVUkx4" label="DelimitedFileToPagingTable.itn">
    <annotation><![CDATA[<p>
      <b>Delimited File to Paging Table</b>
    </p>
    <p>
      This itinerary loads a data set that has a common delimiter character 
      into a Paging Table. D2K uses various implementations of the Table 
      structure to organize the data that is being mined.  The Paging Table is 
      a type of Table capable of keeping only part of its contents in memory 
      at any given time, allowing tables larger than what will fit in memory 
      to be processed. A common source of delimited files is a spreadsheet 
      that saves data in .csv (comma separated value) format.
    </p>
    <p>
      Typically this itinerary would be included as a nested itinerary i n a 
      larger itinerary that works with the table that is created. The use of 
      nested itineraries can eliminate repetitive module placement and 
      connection operations when collections of modules are frequently used 
      together. To nest this itinerary in another, drag it from the Itinerary 
      Resource Panel and drop it in the Workspace. Press and hold the &quot;Ctrl&quot; 
      key and double click the mouse on the nested itinerary icon in the 
      Workspace to access the properties of the modules listed below.
    </p>
    <p>
      <b>Modules with Properties</b>
    </p>
    <p>
      The following modules have properties that may need to be adjusted. The 
      properties can be changed by double clicking on the given module.
    </p>
    <p>
      1 - <b><i>Input File Name</i></b>
    </p>
    <p>
      This module is used to specify the data set. The file is identified via 
      the File Name property.
    </p>
    <p>
      2 - <b><i>Create Delimited File Parser</i></b>
    </p>
    <p>
      This module creates a parser for the specified file. The properties of 
      the module can be used to optionally specify a row containing attribute 
      (column) labels, a row containing attribute (column) data types, and the 
      delimiter character separating the fields in the data set. The module 
      attempts to identify the data types and delimiter automatically if none 
      are specified explicitly. Column labels are generated by the module if 
      the data set being loaded does not have a row containing labels.
    </p>
    <p>
      3 - <b><i>Parse File To Paging Table</i></b>
    </p>
    <p>
      This module loads the data from a file to a Table in memory, using the 
      parser created by Create ARFF File Parser. A property of this module 
      controls whether blanks should be interpreted as missing values. A 
      second property controls the maximum number of table rows to load into 
      memory at any one time.
    </p>
    <p>
      <b>Execution</b>
    </p>
    <p>
      Execute the itinerary by clicking on the &quot;Run&quot; button.
    </p>
    <p>
      This itinerary by itself does not produce any noticeable results when it 
      is executed. To view the Table that is created, attach a Table Viewer 
      module to the output of the Parse File To Paging Table module prior to 
      execution.  
    </p>]]></annotation>
    <module alias="Input URL or Path" classname="ncsa.d2k.modules.core.io.file.input.Input1FileURL" xloc="22" yloc="17">
      <output index="0" classname="ncsa.d2k.modules.core.io.proxy.DataObjectProxy">
        <destination alias="Create Delimited File Parser" index="0"/>
      </output>
      <property name="userName" value=""/>
      <property name="outputCounts" binaryValue="rO0ABXVyAAJbSU26YCZ26rKlAgAAeHAAAAABAAAAAA=="/>
    </module>
    <module alias="Create Delimited File Parser" classname="ncsa.d2k.modules.core.io.file.input.CreateDelimitedParserFromURL" xloc="136" yloc="17">
      <input index="0" classname="ncsa.d2k.modules.core.io.proxy.DataObjectProxy"/>
      <output index="0" classname="ncsa.d2k.modules.core.io.file.input.DelimitedFileParserFromURL">
        <destination alias="Parse File to Paging Table" index="0"/>
      </output>
      <property name="typesRow" value="1"/>
      <property name="labelsRow" value="0"/>
      <property name="hasSpecDelim" value="false"/>
      <property name="outputCounts" binaryValue="rO0ABXVyAAJbSU26YCZ26rKlAgAAeHAAAAABAAAAAA=="/>
      <property name="hasTypes" value="true"/>
      <property name="hasLabels" value="true"/>
    </module>
    <module alias="Parse File to Paging Table" classname="ncsa.d2k.modules.core.io.file.input.ParseFileToPagingTable" xloc="328" yloc="18">
      <input index="0" classname="ncsa.d2k.modules.core.io.file.input.FlatFileParser"/>
      <input index="1" classname="ncsa.d2k.modules.core.datatype.table.TableFactory"/>
      <output index="0" classname="ncsa.d2k.modules.core.datatype.table.MutableTable"/>
      <property name="useBlanks" value="true"/>
      <property name="outputCounts" binaryValue="rO0ABXVyAAJbSU26YCZ26rKlAgAAeHAAAAABAAAAAA=="/>
      <property name="pageSubsets" value="true"/>
      <property name="numRowsPerPage" value="5000"/>
    </module>
  </itinerary>
</toolkit>
