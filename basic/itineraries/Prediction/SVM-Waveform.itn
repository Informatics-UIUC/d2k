<?xml version="1.0" encoding="UTF-8"?>

<toolkit xmlns:xsi="http://www.w3.org/2001/XMLSchema-Instance" xsi:noNamespaceSchemaLocation="itinerary.xsd">
  <itinerary resman="rO0ABXNyAB1uY3NhLmQyay5jb3JlLlJlc291cmNlTWFuYWdlcgAAAAAAAAABAgAAeHIAE2phdmEu
dXRpbC5IYXNodGFibGUTuw8lIUrkuAMAAkYACmxvYWRGYWN0b3JJAAl0aHJlc2hvbGR4cD9AAAAA
AAARdwgAAAALAAAAC3QAEkNyZWF0ZSBTVk0gUHJvYmxlbXNyABtuY3NhLmQyay5jb3JlLlJlc291
cmNlRW50cnkAAAAAAAAAAQIAAkwADGNhY2hlZE9iamVjdHQAEkxqYXZhL2xhbmcvT2JqZWN0O0wA
D29iamVjdENsYXNzTmFtZXQAEkxqYXZhL2xhbmcvU3RyaW5nO3hwcHQAMW5jc2EuZDJrLm1vZHVs
ZXMuY29yZS5wcmVkaWN0aW9uLnN2bS5TVk1Qcm9iTWFrZXJ0ABFJbnB1dCBVUkwgb3IgUGF0aHNx
AH4ABHB0ADFuY3NhLmQyay5tb2R1bGVzLmNvcmUuaW8uZmlsZS5pbnB1dC5JbnB1dDFGaWxlVVJM
dAATUGFyc2UgRmlsZSBUbyBUYWJsZXNxAH4ABHB0ADRuY3NhLmQyay5tb2R1bGVzLmNvcmUuaW8u
ZmlsZS5pbnB1dC5QYXJzZUZpbGVUb1RhYmxldAALU1ZNIEJ1aWxkZXJzcQB+AARwdAAvbmNzYS5k
MmsubW9kdWxlcy5jb3JlLnByZWRpY3Rpb24uc3ZtLlNWTUJ1aWxkZXJ0AAZGYW5PdXRzcQB+AARw
dAAibmNzYS5kMmsuY29yZS5tb2R1bGVzLkZhbk91dE1vZHVsZXQAGFByZWRpY3Rpb24gVGFibGUg
UmVwb3J0MXNxAH4ABHB0AC9uY3NhLmQyay5tb2R1bGVzLmNvcmUudmlzLlByZWRpY3Rpb25UYWJs
ZVJlcG9ydHQAEENyZWF0ZSBTVk0gTW9kZWxzcQB+AARwdAAzbmNzYS5kMmsubW9kdWxlcy5jb3Jl
LnByZWRpY3Rpb24uc3ZtLkNyZWF0ZVNWTU1vZGVsdAAcQ3JlYXRlIERlbGltaXRlZCBGaWxlIFBh
cnNlcnNxAH4ABHB0AEBuY3NhLmQyay5tb2R1bGVzLmNvcmUuaW8uZmlsZS5pbnB1dC5DcmVhdGVE
ZWxpbWl0ZWRQYXJzZXJGcm9tVVJMdAANTW9kZWwgUHJlZGljdHNxAH4ABHB0AC1uY3NhLmQyay5t
b2R1bGVzLmNvcmUucHJlZGljdGlvbi5Nb2RlbFByZWRpY3R0ABFDaG9vc2UgQXR0cmlidXRlc3Nx
AH4ABHB0ADpuY3NhLmQyay5tb2R1bGVzLmNvcmUudHJhbnNmb3JtLmF0dHJpYnV0ZS5DaG9vc2VB
dHRyaWJ1dGVzdAARU2ltcGxlIFRyYWluIFRlc3RzcQB+AARwdAA1bmNzYS5kMmsubW9kdWxlcy5j
b3JlLnRyYW5zZm9ybS50YWJsZS5TaW1wbGVUcmFpblRlc3R4" label="SVM-Waveform.itn">
    <annotation><![CDATA[<p>
      <b>Naive Bayesian Analysis </b>
    </p>
    <p>
      Naive Bayesian builds a model to classify new examples, based upon 
      observed probabilities and supporting evidence from the training data. 
      The data set for this type of problem is one with input attributes and a 
      known output attribute or class.
    </p>
    <p>
      This itinerary creates a Naive Bayes Model by requesting the user to 
      select the input and output attributes, splitting the data into a train 
      set and a test set, requesting the user to bin the data, builds the 
      model on the train set and tests the model on the test set. The 
      visualization is based on the model of the training data and the 
      PredictionTableReport is based on the testing data.
    </p>
    <p>
      <b>Modules with Properties</b>
    </p>
    <p>
      The following modules have properties that may need to be adjusted. The 
      properties can be changed by double clicking on the given module.
    </p>
    <p>
      <i><b>1 - Input File Name:</b></i>
    </p>
    <p>
      This module selects the data set. The file is identified with the 
      filename property.
    </p>
    <p>
      <i><b>2 - Create Delimited File Parser:</b></i>
    </p>
    <p>
      This module creates a parser for the specified file. The properties of 
      the module specify the labels row number, the types row number and the 
      delimiter.
    </p>
    <p>
      <i><b>3 - Parse File To Table:</b></i>
    </p>
    <p>
      This module loads the data from a file to a Table in memory. The 
      property of this module indicates whether blanks should be interpreted 
      as missing values.
    </p>
    <p>
      <i><b>4 - SimpleTrainTest:</b></i>
    </p>
    <p>
      This module allows the user to specify how much data should be used for 
      building the model and testing the model.
    </p>
    <p>
      <b>Modules without Properties or User Interfaces</b>
    </p>
    <p>
      <i><b>1 - Create Bin Tree:</b></i>
    </p>
    <p>
      This module creates takes the binning definitions and builds the BinTree 
      structure with the counts for each bin.
    </p>
    <p>
      <i><b>2 - Create Naive Bayes Model:</b></i>
    </p>
    <p>
      This module builds the Naive Bayes model for the data set.
    </p>
    <p>
      <i><b>3 - Prepare Model For Vis:</b></i>
    </p>
    <p>
      This module performs many calculations that are necessary for the Naive 
      Bayes Visualization module. This includes calculations to determine 
      which attributes are better predictors. It outputs a revised model that 
      is viewable by the Naive Bayes Vis module.
    </p>
    <p>
      <i><b>4 - ModelPredict:</b></i>
    </p>
    <p>
      This module take a testing set and the model and applies the model to 
      the testing data. It creates a prediction column with the 
      classificationfilled in by applying the model. It outputs a Prediction 
      Table which can be viewed in the PredictionTableReport.
    </p>
    <p>
      <i><b>5 - Catch Model:</b></i>
    </p>
    <p>
      This module is used to select a model and return it to the D2K 
      environment, so that is shows up in the Generate Model Session Pane.
    </p>
    <p>
      <b>Execution</b>
    </p>
    <p>
      Execute the itinerary by clicking on the &quot;Run&quot; button. As the itinerary 
      runs, the following windows will open for user input.
    </p>
    <p>
      <i><b>1 - Choose Attributes:</b></i>
    </p>
    <p>
      This user interface prompts the user to identify the input and output 
      attributes. Use Shift to select a range of attributes. Use Control to 
      select and/or deselect an attribute. Also the File menu allows different 
      sorting options.
    </p>
    <p>
      <i><b>2 - Bin Columns:</b></i>
    </p>
    <p>
      This user interface prompts the user to specify how the data should be 
      binned. There are several binning approaches implemented. For instance, 
      highlight all the scalar attributes and type 4 in the Uniform Range 
      Approach for Number of bins. This will create 4 bins for each attribute 
      of uniform range (equal spacing between minimum and maximum value).
    </p>
    <p>
      <b>Results</b>
    </p>
    <p>
      Once execution has completed the status bar will disappear. The pane of 
      the Generated Visualization Session Pane and the Generated Models 
      Session Pane will turn red when visualization and model glpyhs have been 
      created.
    </p>
    <p>
      <i><b>1 - Naive Bayes Vis:</b></i>
    </p>
    <p>
      Naive Bayes Vis provides an evidence visualization for a Naive Bayes 
      Model. Information about this visualization can be found in the help 
      menu item of this visualization. The evidence are the attributes/values 
      combinations and are shown in the left pane as pie charts (or bar 
      charts). Each individual evidence shows how that attribute/value 
      combination is split among the classes of the output attribute. Evidence 
      items can be selected by clicking on an item and the conclusion will 
      update the predictions. Multiple evidence charts can be selected and the 
      predictions are conditional probabilities. Only one chart may be 
      selected per row. Clicking on charts toggle them on and off. The 
      predictions are shown in the conclusion graph and in the legend in the 
      right pane. The evidence can also be zoomed or scaled interactively by 
      right-clicking the mouse and dragging it up and down.
    </p>
    <p>
      <i><b>2 - Prediction Table Report:</b></i>
    </p>
    <p>
      This report shows the classification error - the number and percentage 
      of correct and incorrect, and a confusion matrix.
    </p>]]></annotation>
    <module alias="FanOut" classname="ncsa.d2k.core.modules.FanOutModule" xloc="159" yloc="134">
      <input index="0" classname="ncsa.d2k.modules.core.datatype.table.TrainTable"/>
      <output index="0" classname="ncsa.d2k.modules.core.datatype.table.TrainTable">
        <destination alias="Create SVM Problem" index="0"/>
      </output>
      <output index="1" classname="ncsa.d2k.modules.core.datatype.table.TrainTable">
        <destination alias="Create SVM Model" index="1"/>
      </output>
      <property name="outputCounts" binaryValue="rO0ABXVyAAJbSU26YCZ26rKlAgAAeHAAAAACAAAAAAAAAAA="/>
    </module>
    <module alias="Create Delimited File Parser" classname="ncsa.d2k.modules.core.io.file.input.CreateDelimitedParserFromURL" xloc="136" yloc="17">
      <input index="0" classname="ncsa.d2k.modules.core.io.proxy.DataObjectProxy"/>
      <output index="0" classname="ncsa.d2k.modules.core.io.file.input.DelimitedFileParserFromURL">
        <destination alias="Parse File To Table" index="0"/>
      </output>
      <property name="typesRow" value="1"/>
      <property name="labelsRow" value="0"/>
      <property name="hasSpecDelim" value="false"/>
      <property name="outputCounts" binaryValue="rO0ABXVyAAJbSU26YCZ26rKlAgAAeHAAAAABAAAAAA=="/>
      <property name="hasTypes" value="true"/>
      <property name="hasLabels" value="true"/>
    </module>
    <module alias="Parse File To Table" classname="ncsa.d2k.modules.core.io.file.input.ParseFileToTable" xloc="326" yloc="18">
      <input index="0" classname="ncsa.d2k.modules.core.io.file.input.FlatFileParser"/>
      <input index="1" classname="ncsa.d2k.modules.core.datatype.table.TableFactory"/>
      <output index="0" classname="ncsa.d2k.modules.core.datatype.table.MutableTable">
        <destination alias="Choose Attributes" index="0"/>
      </output>
      <property name="useBlanks" value="true"/>
      <property name="outputCounts" binaryValue="rO0ABXVyAAJbSU26YCZ26rKlAgAAeHAAAAABAAAAAA=="/>
    </module>
    <module alias="Prediction Table Report1" classname="ncsa.d2k.modules.core.vis.PredictionTableReport" xloc="508" yloc="328">
      <input index="0" classname="ncsa.d2k.modules.core.datatype.table.PredictionTable"/>
      <property name="outputCounts" binaryValue="rO0ABXVyAAJbSU26YCZ26rKlAgAAeHAAAAAA"/>
      <property name="windowName" value="Prediction Table Report1"/>
    </module>
    <module alias="Choose Attributes" classname="ncsa.d2k.modules.core.transform.attribute.ChooseAttributes" xloc="519" yloc="18">
      <input index="0" classname="ncsa.d2k.modules.core.datatype.table.Table"/>
      <output index="0" classname="ncsa.d2k.modules.core.datatype.table.ExampleTable">
        <destination alias="Simple Train Test" index="0"/>
      </output>
      <property name="outputCounts" binaryValue="rO0ABXVyAAJbSU26YCZ26rKlAgAAeHAAAAABAAAAAA=="/>
      <property name="windowName" value="Choose Attributes"/>
      <property name="suppressGui" value="false"/>
      <property name="selectedInputs" binaryValue="rO0ABXVyABNbTGphdmEubGFuZy5PYmplY3Q7kM5YnxBzKWwCAAB4cAAAACh0AAJ4MXQAAngydAAC
eDN0AAJ4NHQAAng1dAACeDZ0AAJ4N3QAAng4dAACeDl0AAN4MTB0AAN4MTF0AAN4MTJ0AAN4MTN0
AAN4MTR0AAN4MTV0AAN4MTZ0AAN4MTd0AAN4MTh0AAN4MTl0AAN4MjB0AAN4MjF0AAN4MjJ0AAN4
MjN0AAN4MjR0AAN4MjV0AAN4MjZ0AAN4Mjd0AAN4Mjh0AAN4Mjl0AAN4MzB0AAN4MzF0AAN4MzJ0
AAN4MzN0AAN4MzR0AAN4MzV0AAN4MzZ0AAN4Mzd0AAN4Mzh0AAN4Mzl0AAN4NDA="/>
      <property name="selectedOutputs" binaryValue="rO0ABXVyABNbTGphdmEubGFuZy5PYmplY3Q7kM5YnxBzKWwCAAB4cAAAAAF0AAVjbGFzcw=="/>
    </module>
    <module alias="Simple Train Test" classname="ncsa.d2k.modules.core.transform.table.SimpleTrainTest" xloc="13" yloc="126">
      <input index="0" classname="ncsa.d2k.modules.core.datatype.table.Table"/>
      <output index="0" classname="ncsa.d2k.modules.core.datatype.table.TrainTable">
        <destination alias="FanOut" index="0"/>
      </output>
      <output index="1" classname="ncsa.d2k.modules.core.datatype.table.TestTable">
        <destination alias="Model Predict" index="0"/>
      </output>
      <property name="outputCounts" binaryValue="rO0ABXVyAAJbSU26YCZ26rKlAgAAeHAAAAACAAAAAAAAAAA="/>
      <property name="testPercent" value="33"/>
      <property name="samplingMethod" value="0"/>
      <property name="seed" value="123"/>
      <property name="trainPercent" value="67"/>
    </module>
    <module alias="Create SVM Model" classname="ncsa.d2k.modules.core.prediction.svm.CreateSVMModel" xloc="249" yloc="260">
      <input index="0" classname="libsvm.svm_model"/>
      <input index="1" classname="ncsa.d2k.modules.core.datatype.table.ExampleTable"/>
      <output index="0" classname="ncsa.d2k.modules.core.prediction.svm.SVMModel">
        <destination alias="Model Predict" index="1"/>
      </output>
      <property name="outputCounts" binaryValue="rO0ABXVyAAJbSU26YCZ26rKlAgAAeHAAAAABAAAAAA=="/>
    </module>
    <module alias="Input URL or Path" classname="ncsa.d2k.modules.core.io.file.input.Input1FileURL" xloc="22" yloc="17">
      <output index="0" classname="ncsa.d2k.modules.core.io.proxy.DataObjectProxy">
        <destination alias="Create Delimited File Parser" index="0"/>
      </output>
      <property name="userName" value=""/>
      <property name="outputCounts" binaryValue="rO0ABXVyAAJbSU26YCZ26rKlAgAAeHAAAAABAAAAAA=="/>
      <property name="fileName" value="data/UCI/waveform-5000.csv"/>
      <property name="hostURL" value=""/>
    </module>
    <module alias="SVM Builder" classname="ncsa.d2k.modules.core.prediction.svm.SVMBuilder" xloc="453" yloc="145">
      <input index="0" classname="libsvm.svm_problem"/>
      <input index="1" classname="java.lang.Integer"/>
      <output index="0" classname="libsvm.svm_model">
        <destination alias="Create SVM Model" index="0"/>
      </output>
      <property name="outputCounts" binaryValue="rO0ABXVyAAJbSU26YCZ26rKlAgAAeHAAAAABAAAAAA=="/>
      <property name="gamma" value="0.0"/>
      <property name="c" value="1.0"/>
      <property name="shrinking" value="1"/>
      <property name="coef0" value="0.0"/>
      <property name="eps" value="0.0010"/>
      <property name="cacheSize" value="40.0"/>
      <property name="nu" value="0.5"/>
      <property name="p" value="0.1"/>
      <property name="degree" value="3.0"/>
      <property name="svmType" value="0"/>
      <property name="kernelType" value="2"/>
    </module>
    <module alias="Create SVM Problem" classname="ncsa.d2k.modules.core.prediction.svm.SVMProbMaker" xloc="263" yloc="145">
      <input index="0" classname="ncsa.d2k.modules.core.datatype.table.ExampleTable"/>
      <output index="0" classname="libsvm.svm_problem">
        <destination alias="SVM Builder" index="0"/>
      </output>
      <output index="1" classname="java.lang.Integer">
        <destination alias="SVM Builder" index="1"/>
      </output>
      <property name="outputCounts" binaryValue="rO0ABXVyAAJbSU26YCZ26rKlAgAAeHAAAAACAAAAAAAAAAA="/>
    </module>
    <module alias="Model Predict" classname="ncsa.d2k.modules.core.prediction.ModelPredict" xloc="396" yloc="331">
      <input index="0" classname="ncsa.d2k.modules.core.datatype.table.ExampleTable"/>
      <input index="1" classname="ncsa.d2k.modules.PredictionModelModule"/>
      <output index="0" classname="ncsa.d2k.modules.core.datatype.table.PredictionTable">
        <destination alias="Prediction Table Report1" index="0"/>
      </output>
      <property name="outputCounts" binaryValue="rO0ABXVyAAJbSU26YCZ26rKlAgAAeHAAAAABAAAAAA=="/>
    </module>
  </itinerary>
</toolkit>
