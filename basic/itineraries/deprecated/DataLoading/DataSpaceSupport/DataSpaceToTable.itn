<?xml version="1.0" encoding="UTF-8"?>

<toolkit xmlns:xsi="http://www.w3.org/2001/XMLSchema-Instance" xsi:noNamespaceSchemaLocation="itinerary.xsd">
  <itinerary resman="rO0ABXNyAB1uY3NhLmQyay5jb3JlLlJlc291cmNlTWFuYWdlcgAAAAAAAAABAgAAeHIAE2phdmEu
dXRpbC5IYXNodGFibGUTuw8lIUrkuAMAAkYACmxvYWRGYWN0b3JJAAl0aHJlc2hvbGR4cD9AAAAA
AAAIdwgAAAALAAAAAXQAE1NlbGVjdCBEU1RQIERhdGFzZXRzcgAbbmNzYS5kMmsuY29yZS5SZXNv
dXJjZUVudHJ5AAAAAAAAAAECAAJMAAxjYWNoZWRPYmplY3R0ABJMamF2YS9sYW5nL09iamVjdDtM
AA9vYmplY3RDbGFzc05hbWV0ABJMamF2YS9sYW5nL1N0cmluZzt4cHB0ADBuY3NhLmQyay5tb2R1
bGVzLmNvcmUuaW8uZHN0cC5QYXJzZURTVFBUb0RCVGFibGV4" label="DataSpaceToTable.itn">
    <annotation><![CDATA[<p>
      Overview: This module provides a GUI that is a metadata viewer for a 
      DSTP server. The user can select a data source to be loaded into a 
      DBTable for use in D2K itineraries.
    </p>
    <p>
      See: http://www.dataspaceweb.net/index.htm. DataSpaces is a research 
      product of The National Center for Data Mining (NCDM) at the University 
      of Illinois at Chicago (UIC).
    </p>
    <p>
      Detailed Description: This GUI provides a tree view of metadata for DSTP 
      data sources. Anyof these sources can be selected and loaded into a 
      DBTable for use in a D2K itinerary. To select a source simply double 
      click on the tree node that bears the source name. The attributes for 
      the source will be displayed in the window on the right. Initially, all 
      attributes will appear selected. The user can select and deselect 
      attributes as desired. When the Done button is pressed the DBTable is 
      built and output and the GUI will be dismissed. If the server on which 
      the data source resides (not necessarily the same as the server 
      initially contacted) is not reachable, then an error message is 
      displayed and the GUI remains. The Reset button causes the metadata to 
      be rebuilt. The Abort button aborts the itinerary. This version of the 
      GUI does not support sampling.
    </p>
    <p>
      Data Handling: The DBTable that is created uses a primitive 
      implementation of a DBDataSource that lads the entire dataset into 
      memory. The DBTable is serializable but the data is transient. The data 
      is reacquired from the DSTP server when the object is deserialized. The 
      DBTable is not mutable.
    </p>
    <p>
      Scalability: The DBTable created currently has the same memory 
      limitations as an in memory table. This will eventually be corrected 
      with an appropriate caching scheme.
    </p>]]></annotation>
    <module alias="Select DSTP Dataset" classname="ncsa.d2k.modules.core.io.dstp.ParseDSTPToDBTable" xloc="11" yloc="18">
      <output index="0" classname="ncsa.d2k.modules.core.datatype.table.Table"/>
      <property name="outputCounts" binaryValue="rO0ABXVyAAJbSU26YCZ26rKlAgAAeHAAAAABAAAAAA=="/>
      <property name="windowName" value="Select DSTP Dataset"/>
      <property name="serverName" value=""/>
      <property name="suppressGui" value="false"/>
    </module>
  </itinerary>
</toolkit>
